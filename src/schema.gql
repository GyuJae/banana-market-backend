# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CreateAccountOutput {
  ok: Boolean!
  error: String
}

type EditUserOutput {
  ok: Boolean!
  error: String
}

type LoginOutput {
  ok: Boolean!
  error: String
  token: String
}

type CreatePostOutput {
  ok: Boolean!
  error: String
}

type EditPostOutput {
  ok: Boolean!
  error: String
}

type ReadPostOutput {
  ok: Boolean!
  error: String
  post: Post
}

type Post {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  soldOut: Boolean!
  title: String!
  location: String!
  description: String!
  price: Int!
  files: [String!]
  viewCount: Int!
  author: User
  likes: [Like!]
  hashtags: [Hashtag!]
  likeCount: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  name: String!
  password: String!
  location: String!
  avatar: String
  posts: [Post!]
  messageRooms: [MessageRoom!]
}

type MessageRoom {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  post: Post!
  postId: Int!
  messages: [Message!]!
  users: [User!]!
}

type Message {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  userId: Int!
  messageRoom: MessageRoom!
  messageRoomId: Int!
  payload: String!
}

type Like {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  post: Post!
  user: User!
}

type Hashtag {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  hashtag: String!
  posts: [Post!]
}

type SearchPostsOutput {
  ok: Boolean!
  error: String
  posts: [Post!]
}

type ShowPostByHashtagOutput {
  ok: Boolean!
  error: String
  posts: [Post!]
}

type SendMessageOutput {
  ok: Boolean!
  error: String
}

type ShowMessagesOutput {
  ok: Boolean!
  error: String
  messages: [Message!]
}

type Query {
  whoAmI: User!
  readPost(input: ReadPostInput!): ReadPostOutput!
  showPostByHashtag(input: ShowPostByHashtagInput!): ShowPostByHashtagOutput!
  searchPosts(input: SearchPostsInput!): SearchPostsOutput!
  showMessages(input: ShowMessagesInput!): ShowMessagesOutput!
}

input ReadPostInput {
  postId: Int!
}

input ShowPostByHashtagInput {
  hashtag: String!
}

input SearchPostsInput {
  keyword: String!
}

input ShowMessagesInput {
  roomId: Int!
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  login(input: LoginInput!): LoginOutput!
  editUser(input: EditUserInput!): EditUserOutput!
  createPost(input: CreatePostInput!): CreatePostOutput!
  editPost(input: EditPostInput!): EditPostOutput!
  toggleLike(input: ToggleLikeInput!): CreateAccountOutput!
  sendMessage(input: SendMessageInput!): SendMessageOutput!
}

input CreateAccountInput {
  email: String!
  name: String!
  password: String!
  location: String!
}

input LoginInput {
  email: String!
  password: String!
}

input EditUserInput {
  name: String
  password: String
  location: String
  avatar: String
}

input CreatePostInput {
  title: String!
  location: String!
  description: String!
  price: Int!
  hashtagInput: String
}

input EditPostInput {
  postId: Int!
  soldOut: Boolean
  title: String
  location: String
  description: String
  price: Float
  hashtagInput: String
}

input ToggleLikeInput {
  postId: Int!
}

input SendMessageInput {
  roomId: Int
  payload: String!
  postId: Int
}

type Subscription {
  receiveMessage(roomId: Float!): String!
}
